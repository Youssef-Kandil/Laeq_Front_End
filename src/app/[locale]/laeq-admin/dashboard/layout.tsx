// === LAEQ Dashboard LAYOUT ===
import {NextIntlClientProvider, hasLocale} from 'next-intl';
import {notFound } from 'next/navigation';
import { routing } from '@/i18n/routing';
import Styles from './LaeqdashboardLayout.module.css'
import type { Metadata } from "next";
import "../../../globals.css";
import app_identity from '@/app/config/identity';


import { cookies  } from 'next/headers';
import encryption from '@/app/utils/encryption';


export const metadata: Metadata = {
  title: "LAEQ365 - dashboard",
  description: "Generated by LAEQ365",
};

// ===== Server Action لتحديث الكوكيز =====


import LaeqNave from '@/app/components/dashboard/LaeqNave/LaeqNave';
import LaeqAside from '@/app/components/dashboard/LaeqAside/LaeqAside';








export default async function DashboardLayout({
  children,
  params
}: {
  children: React.ReactNode;
  params: Promise<{locale: string}>;
}) {
  // Ensure that the incoming `locale` is valid
  const {locale} = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  let messages;
  try {
    messages = (await import(`@/locales/${locale}.json`)).default;
  } catch (error) {;
    console.log(error)
    notFound(); // في حالة عدم العثور على ملف الترجمة
  }
  const cookieStore = await cookies();



  // === Get Token From Cookies ==
    const infoToken =  cookieStore.get('AccountInfo')?.value ?? "";
    const key = process.env.NEXT_PUBLIC_HASH_KEY as string;
    const decryptionResult  =  encryption.decryption(infoToken,key)
    // Safely parse decrypted cookie value to avoid crashing on empty/invalid JSON
    let info: {userDetails:{end_date:string}} | null = null;
    if (decryptionResult) {
      const trimmed = String(decryptionResult).trim();
      if (trimmed && trimmed !== "null" && trimmed !== "undefined" && (trimmed.startsWith("{") || trimmed.startsWith("["))) {
        try {
          info = JSON.parse(trimmed);
        } catch (err) {
          console.error("Invalid AccountInfo cookie:", err);
        }
      }
    }
    console.warn("INFO FROM SERVER :: ",info);








  return (
    <div style={{fontFamily:app_identity.primary_font}}  className={Styles.main_layout} lang={locale}>
        <NextIntlClientProvider locale={locale} messages={messages}>
            <LaeqAside/>
            <LaeqNave/>
            <main className={Styles.mainComponent} style={{gridColumn:2,background:"#EEEEEE80"}}>
                {children}
            </main>
        </NextIntlClientProvider>

    </div>
  );

}