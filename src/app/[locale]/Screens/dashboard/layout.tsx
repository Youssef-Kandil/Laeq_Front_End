// === WEBSITE LAYOUT ===
import {NextIntlClientProvider, hasLocale} from 'next-intl';
import {notFound} from 'next/navigation';
import { routing } from '@/i18n/routing';
import Styles from './dashboardLayout.module.css'
import type { Metadata } from "next";
import "../../../globals.css";
import app_identity from '@/app/config/identity';

import  Check_Authenticated  from '@/app/services/jwt_verify'
import { redirect  } from 'next/navigation';
import { cookies } from 'next/headers';


export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

import Nave from '@/app/components/dashboard/Nave/Nave';
import Aside from '@/app/components/dashboard/Aside/Aside';




export default async function DashboardLayout({
  children,
  params
}: {
  children: React.ReactNode;
  params: Promise<{locale: string}>;
}) {
  // Ensure that the incoming `locale` is valid
  const {locale} = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  let messages;
  try {
    messages = (await import(`@/locales/${locale}.json`)).default;
  } catch (error) {;
    console.log(error)
    notFound(); // في حالة عدم العثور على ملف الترجمة
  }


  // === Get Token From Cookies ==
    const cookieStore = await cookies();
    const token =  cookieStore.get('token')?.value;

  
  // if (!token) {
    
  //     const res = await Check_Authenticated.Protected_page_verify()
  //     const isAuthenticated = await res.isAuthenticated
    
  //     if (!isAuthenticated) {
  //       // console.log("isAuthenticated : ",isAuthenticated)
  //         redirect(`/${locale}/Screens/forms/login`);
  //     }
  // }

  // const res = await Check_Authenticated.Protected_page_verify();
  // const isAuthenticated = res?.isAuthenticated;

  // if (!isAuthenticated) {
  //   redirect(`/${locale}/Screens/forms/login`);
  // }




  return (
    <div style={{fontFamily:app_identity.primary_font,overflow:'hidden'}}  className={Styles.main_layout} lang={locale}>
        <NextIntlClientProvider locale={locale} messages={messages}>
          <Aside/>
          <Nave/>
          <main style={{gridColumn:2,background:"#EEEEEE80",overflow:'auto'}}>
            {children}
          </main>
        </NextIntlClientProvider>

    </div>
  );

}