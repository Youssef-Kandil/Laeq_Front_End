import {NextIntlClientProvider, hasLocale} from 'next-intl';
// import ReactQueryProvider from '../providers/ReactQueryProvider';
import {notFound} from 'next/navigation';
import { routing } from '../../i18n/routing';
import { Roboto,Outfit } from "next/font/google";
import type { Metadata } from "next";
// import { SessionProvider } from "next-auth/react";
import MainProviders from '../providers/MainProviders';
import "../globals.css";


const outfitSans = Outfit({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});
const robotoSans = Roboto({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "LAEQ365",
  description: "Generated by LAEQ",
  keywords:"",
};

 
export default async function LocaleLayout({
  children,
  params
}: {
  children: React.ReactNode;
  params: Promise<{locale: string}>;
}) {
  // Ensure that the incoming `locale` is valid
  const {locale} = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
 
  return (
    <html  lang={locale}>
      <body className={`${robotoSans.variable} ${outfitSans.variable} antialiased`} >
                <MainProviders locale={locale}>
                    <NextIntlClientProvider  locale={locale} >
                      {children}
                    </NextIntlClientProvider>
                </MainProviders>
      </body>
    </html>
  );
}